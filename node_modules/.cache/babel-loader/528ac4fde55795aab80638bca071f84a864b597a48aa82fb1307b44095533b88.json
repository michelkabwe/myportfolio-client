{"ast":null,"code":"var _jsxFileName = \"/Users/Michelka/Documents/portfolio/frontend/src/hooks/usePostListContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoriesContext = /*#__PURE__*/createContext(undefined);\nexport const useCategoriesContext = () => {\n  _s();\n  const context = useContext(CategoriesContext);\n  if (!context) {\n    throw new Error('useCategoriesContext must be used within a CategoriesProvider');\n  }\n  return context;\n};\n_s(useCategoriesContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CategoriesProvider = ({\n  children\n}) => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const handlePostClick = id => {\n    return `http://localhost:3001/api/posts/${id}`;\n  };\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/posts/');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const handleUpdatePost = async id => {\n    try {\n      const response = await axios.put(`http://localhost:3001/api/posts/${id}`);\n      const editedPosts = posts;\n    } catch (error) {\n      console.error('Error');\n    }\n  };\n  const handleDeletePost = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/api/posts/${id}`);\n      const updatedPosts = posts.filter(post => post.id !== id);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  const contextValue = {\n    posts,\n    handleDeletePost,\n    handlePostClick,\n    handleUpdatePost\n  };\n  return /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s2(CategoriesProvider, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = CategoriesProvider;\nvar _c;\n$RefreshReg$(_c, \"CategoriesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","CategoriesContext","undefined","useCategoriesContext","_s","context","Error","CategoriesProvider","children","_s2","posts","setPosts","handlePostClick","id","fetchPosts","response","get","data","error","console","handleUpdatePost","put","editedPosts","handleDeletePost","delete","updatedPosts","filter","post","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/hooks/usePostListContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport axios from 'axios';\n\n\ninterface CategoriesProviderProps {\n    children: ReactNode;\n}\n\ninterface Category {\n    id: number;\n    category_id: string;\n    content: string;\n    title: string;\n    imageUrl: string;\n}\n\ninterface ContextValue {\n    posts: Category[];\n    handleDeletePost: (id: number) => void;\n    handlePostClick: (id: number) => void;\n    handleUpdatePost: (id: number) => void;\n\n}\n\nconst CategoriesContext = createContext<ContextValue | undefined>(undefined);\n\nexport const useCategoriesContext = (): ContextValue => {\n    const context = useContext(CategoriesContext);\n    if (!context) {\n        throw new Error('useCategoriesContext must be used within a CategoriesProvider');\n    }\n    return context;\n};\n\nexport const CategoriesProvider: React.FC<CategoriesProviderProps> = ({ children }) => {\n    const [posts, setPosts] = useState<Category[]>([]);\n\n\n\n    const handlePostClick = (id: number) => {\n        return `http://localhost:3001/api/posts/${id}`\n    };\n\n    const fetchPosts = async () => {\n        try {\n            const response = await axios.get<Category[]>('http://localhost:3001/api/posts/');\n            setPosts(response.data);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n\n\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n\n    const handleUpdatePost = async (id: number) => {\n        try {\n\n            const response = await axios.put(`http://localhost:3001/api/posts/${id}`);\n            const editedPosts = posts\n\n\n\n        } catch (error) {\n            console.error('Error')\n        }\n\n    }\n\n    const handleDeletePost = async (id: number) => {\n        try {\n            await axios.delete(`http://localhost:3001/api/posts/${id}`);\n            const updatedPosts = posts.filter(post => post.id !== id);\n            setPosts(updatedPosts);\n        } catch (error) {\n            console.error('Error deleting post:', error);\n        }\n    };\n\n    const contextValue: ContextValue = {\n        posts,\n        handleDeletePost,\n        handlePostClick,\n        handleUpdatePost\n    };\n\n    return (\n        <CategoriesContext.Provider value={contextValue}>\n            {children}\n        </CategoriesContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAmB,OAAO;AACxF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB1B,MAAMC,iBAAiB,gBAAGP,aAAa,CAA2BQ,SAAS,CAAC;AAE5E,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAoB;EAAAC,EAAA;EACpD,MAAMC,OAAO,GAAGV,UAAU,CAACM,iBAAiB,CAAC;EAC7C,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;EACpF;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,oBAAoB;AAQjC,OAAO,MAAMI,kBAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAa,EAAE,CAAC;EAIlD,MAAMe,eAAe,GAAIC,EAAU,IAAK;IACpC,OAAQ,mCAAkCA,EAAG,EAAC;EAClD,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAa,kCAAkC,CAAC;MAChFL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAIDtB,SAAS,CAAC,MAAM;IACZkB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMM,gBAAgB,GAAG,MAAOP,EAAU,IAAK;IAC3C,IAAI;MAEA,MAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACuB,GAAG,CAAE,mCAAkCR,EAAG,EAAC,CAAC;MACzE,MAAMS,WAAW,GAAGZ,KAAK;IAI7B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,OAAO,CAAC;IAC1B;EAEJ,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAOV,EAAU,IAAK;IAC3C,IAAI;MACA,MAAMf,KAAK,CAAC0B,MAAM,CAAE,mCAAkCX,EAAG,EAAC,CAAC;MAC3D,MAAMY,YAAY,GAAGf,KAAK,CAACgB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACd,EAAE,KAAKA,EAAE,CAAC;MACzDF,QAAQ,CAACc,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMU,YAA0B,GAAG;IAC/BlB,KAAK;IACLa,gBAAgB;IAChBX,eAAe;IACfQ;EACJ,CAAC;EAED,oBACIpB,OAAA,CAACC,iBAAiB,CAAC4B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAApB,QAAA,EAC3CA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAErC,CAAC;AAACzB,GAAA,CA7DWF,kBAAqD;AAAA4B,EAAA,GAArD5B,kBAAqD;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}