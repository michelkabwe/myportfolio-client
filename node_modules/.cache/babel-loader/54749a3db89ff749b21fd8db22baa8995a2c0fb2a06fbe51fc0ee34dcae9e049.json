{"ast":null,"code":"var _jsxFileName = \"/Users/Michelka/Documents/portfolio/frontend/src/contexts/usePostProvider/usePostList.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoriesContext = /*#__PURE__*/createContext(undefined);\nexport const useCategoriesContext = () => {\n  _s();\n  const context = useContext(CategoriesContext);\n  if (!context) {\n    throw new Error('useCategoriesContext must be used within a CategoriesProvider');\n  }\n  return context;\n};\n_s(useCategoriesContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CategoriesProvider = ({\n  children\n}) => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const navigate = useNavigate();\n  const handlePostClick = id => {\n    return `http://localhost:3001/api/posts/${id}`;\n  };\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/posts/');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n  const titleRef = useRef(null);\n  const contentRef = useRef(null);\n  const selectRef = useRef(null);\n  const handleSubmitPost = async event => {\n    event.preventDefault();\n    try {\n      var _titleRef$current, _contentRef$current, _selectRef$current;\n      const formData = new FormData();\n      if (selectedFile) {\n        formData.append('file', selectedFile);\n        console.log(selectedFile, 'selectedFILEEEE');\n        ;\n      }\n      const response = await axios.post('http://localhost:3001/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const title = ((_titleRef$current = titleRef.current) === null || _titleRef$current === void 0 ? void 0 : _titleRef$current.value) || '';\n      const content = ((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.value) || '';\n      const selectedCategory = ((_selectRef$current = selectRef.current) === null || _selectRef$current === void 0 ? void 0 : _selectRef$current.value) || '';\n      const imageUrl = response.data.imageUrl;\n      formData.append('title', title);\n      formData.append('content', content);\n      formData.append('selectedCategory', selectedCategory);\n      formData.append('imageUrl', imageUrl);\n      const res = await axios.post('http://localhost:3001/api/posts/', {\n        title,\n        content,\n        selectedCategory,\n        imageUrl\n      });\n\n      //const createdPostId = res.data; // Assuming the response contains the id of the created post\n\n      // Now you can use the createdPostId to navigate\n      //navigate(`/posts/${createdPostId}`);\n    } catch (error) {\n      console.error('Error', error);\n    }\n  };\n  const handleUpdatePost = async (id, updatedData) => {\n    try {\n      const response = await axios.put(`http://localhost:3001/api/posts/${id}`, updatedData);\n\n      // Update the posts state with the edited post\n      setPosts(prevPosts => prevPosts.map(post => post.id === id ? {\n        ...post,\n        ...updatedData\n      } : post));\n      return response;\n    } catch (error) {\n      console.error('Error updating post:', error);\n      throw error; // Rethrow the error to handle it in the component\n    }\n  };\n\n  const handleDeletePost = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/api/posts/${id}`);\n      const updatedPosts = posts.filter(post => post.id !== id);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  const contextValue = {\n    posts,\n    handleDeletePost,\n    handlePostClick,\n    handleUpdatePost,\n    handleSubmitPost,\n    handleFileChange,\n    titleRef,\n    contentRef,\n    selectRef\n  };\n  return /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s2(CategoriesProvider, \"ZRZTR+RtrlK5kTVE/orrh6dWhUI=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoriesProvider;\nvar _c;\n$RefreshReg$(_c, \"CategoriesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","useNavigate","axios","jsxDEV","_jsxDEV","CategoriesContext","undefined","useCategoriesContext","_s","context","Error","CategoriesProvider","children","_s2","posts","setPosts","navigate","handlePostClick","id","fetchPosts","response","get","data","error","console","selectedFile","setSelectedFile","handleFileChange","event","_event$target$files","file","target","files","titleRef","contentRef","selectRef","handleSubmitPost","preventDefault","_titleRef$current","_contentRef$current","_selectRef$current","formData","FormData","append","log","post","headers","title","current","value","content","selectedCategory","imageUrl","res","handleUpdatePost","updatedData","put","prevPosts","map","handleDeletePost","delete","updatedPosts","filter","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/contexts/usePostProvider/usePostList.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n\ninterface CategoriesProviderProps {\n    children: ReactNode;\n}\n\ninterface Category {\n    id: number;\n    category_id: string;\n    content: string;\n    title: string;\n    imageUrl: string;\n}\n\ninterface ContextValue {\n    posts: Category[];\n    handleDeletePost: (id: number) => void;\n    handlePostClick: (id: number) => void;\n    handleUpdatePost: (id: number, updatedData: Partial<Category>) => void;\n    handleSubmitPost: (event: React.FormEvent<HTMLFormElement>) => Promise<void>;\n    handleFileChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    titleRef: React.MutableRefObject<HTMLInputElement | null>;\n    contentRef: React.MutableRefObject<HTMLTextAreaElement | null>;\n    selectRef: React.MutableRefObject<HTMLSelectElement | null>;\n}\n\nconst CategoriesContext = createContext<ContextValue | undefined>(undefined);\n\nexport const useCategoriesContext = (): ContextValue => {\n    const context = useContext(CategoriesContext);\n    if (!context) {\n        throw new Error('useCategoriesContext must be used within a CategoriesProvider');\n    }\n    return context;\n};\n\nexport const CategoriesProvider: React.FC<CategoriesProviderProps> = ({ children }) => {\n    const [posts, setPosts] = useState<Category[]>([]);\n    const navigate = useNavigate();\n\n    const handlePostClick = (id: number) => {\n        return `http://localhost:3001/api/posts/${id}`\n    };\n\n    const fetchPosts = async () => {\n        try {\n            const response = await axios.get<Category[]>('http://localhost:3001/api/posts/');\n            setPosts(response.data);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n\n\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n\n    const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            setSelectedFile(file);\n        }\n    };\n\n    const titleRef = useRef<HTMLInputElement>(null);\n    const contentRef = useRef<HTMLTextAreaElement>(null);\n    const selectRef = useRef<HTMLSelectElement>(null);\n\n\n    const handleSubmitPost = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n\n        try {\n            const formData = new FormData();\n            if (selectedFile) {\n                formData.append('file', selectedFile);\n                console.log(selectedFile, 'selectedFILEEEE');\n                ;\n            }\n\n            const response: any = await axios.post('http://localhost:3001/api/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n\n            });\n\n            const title = titleRef.current?.value || '';\n            const content = contentRef.current?.value || '';\n            const selectedCategory = selectRef.current?.value || '';\n\n\n            const imageUrl = response.data.imageUrl;\n\n            formData.append('title', title);\n            formData.append('content', content);\n            formData.append('selectedCategory', selectedCategory);\n            formData.append('imageUrl', imageUrl);\n\n            const res = await axios.post<FormData>('http://localhost:3001/api/posts/', {\n                title, content, selectedCategory, imageUrl\n\n            })\n\n\n            //const createdPostId = res.data; // Assuming the response contains the id of the created post\n\n            // Now you can use the createdPostId to navigate\n            //navigate(`/posts/${createdPostId}`);\n\n        } catch (error) {\n            console.error('Error', error)\n        }\n\n\n    }\n\n\n\n    const handleUpdatePost = async (id: number, updatedData: Partial<Category>) => {\n        try {\n            const response = await axios.put(`http://localhost:3001/api/posts/${id}`, updatedData);\n\n            // Update the posts state with the edited post\n            setPosts(prevPosts =>\n                prevPosts.map(post => (post.id === id ? { ...post, ...updatedData } : post))\n            );\n\n            return response;\n        } catch (error) {\n            console.error('Error updating post:', error);\n            throw error; // Rethrow the error to handle it in the component\n        }\n    };\n\n\n    const handleDeletePost = async (id: number) => {\n        try {\n            await axios.delete(`http://localhost:3001/api/posts/${id}`);\n            const updatedPosts = posts.filter(post => post.id !== id);\n            setPosts(updatedPosts);\n        } catch (error) {\n            console.error('Error deleting post:', error);\n        }\n    };\n\n    const contextValue: ContextValue = {\n        posts,\n        handleDeletePost,\n        handlePostClick,\n        handleUpdatePost,\n        handleSubmitPost,\n        handleFileChange,\n        titleRef,\n        contentRef,\n        selectRef,\n\n\n    };\n\n    return (\n        <CategoriesContext.Provider value={contextValue}>\n            {children}\n        </CategoriesContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAaC,MAAM,QAAQ,OAAO;AAChG,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA2B1B,MAAMC,iBAAiB,gBAAGT,aAAa,CAA2BU,SAAS,CAAC;AAE5E,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAoB;EAAAC,EAAA;EACpD,MAAMC,OAAO,GAAGZ,UAAU,CAACQ,iBAAiB,CAAC;EAC7C,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;EACpF;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,oBAAoB;AAQjC,OAAO,MAAMI,kBAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAa,EAAE,CAAC;EAClD,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,eAAe,GAAIC,EAAU,IAAK;IACpC,OAAQ,mCAAkCA,EAAG,EAAC;EAClD,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAa,kCAAkC,CAAC;MAChFN,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAIDzB,SAAS,CAAC,MAAM;IACZqB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAc,IAAI,CAAC;EAEnE,MAAM4B,gBAAgB,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACrE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAIC,IAAI,EAAE;MACNJ,eAAe,CAACI,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,MAAMG,QAAQ,GAAGjC,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMkC,UAAU,GAAGlC,MAAM,CAAsB,IAAI,CAAC;EACpD,MAAMmC,SAAS,GAAGnC,MAAM,CAAoB,IAAI,CAAC;EAGjD,MAAMoC,gBAAgB,GAAG,MAAOR,KAAuC,IAAK;IACxEA,KAAK,CAACS,cAAc,CAAC,CAAC;IAGtB,IAAI;MAAA,IAAAC,iBAAA,EAAAC,mBAAA,EAAAC,kBAAA;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/B,IAAIjB,YAAY,EAAE;QACdgB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAElB,YAAY,CAAC;QACrCD,OAAO,CAACoB,GAAG,CAACnB,YAAY,EAAE,iBAAiB,CAAC;QAC5C;MACJ;MAEA,MAAML,QAAa,GAAG,MAAMlB,KAAK,CAAC2C,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;QACjFK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MAEJ,CAAC,CAAC;MAEF,MAAMC,KAAK,GAAG,EAAAT,iBAAA,GAAAL,QAAQ,CAACe,OAAO,cAAAV,iBAAA,uBAAhBA,iBAAA,CAAkBW,KAAK,KAAI,EAAE;MAC3C,MAAMC,OAAO,GAAG,EAAAX,mBAAA,GAAAL,UAAU,CAACc,OAAO,cAAAT,mBAAA,uBAAlBA,mBAAA,CAAoBU,KAAK,KAAI,EAAE;MAC/C,MAAME,gBAAgB,GAAG,EAAAX,kBAAA,GAAAL,SAAS,CAACa,OAAO,cAAAR,kBAAA,uBAAjBA,kBAAA,CAAmBS,KAAK,KAAI,EAAE;MAGvD,MAAMG,QAAQ,GAAGhC,QAAQ,CAACE,IAAI,CAAC8B,QAAQ;MAEvCX,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEI,KAAK,CAAC;MAC/BN,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEO,OAAO,CAAC;MACnCT,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEQ,gBAAgB,CAAC;MACrDV,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAES,QAAQ,CAAC;MAErC,MAAMC,GAAG,GAAG,MAAMnD,KAAK,CAAC2C,IAAI,CAAW,kCAAkC,EAAE;QACvEE,KAAK;QAAEG,OAAO;QAAEC,gBAAgB;QAAEC;MAEtC,CAAC,CAAC;;MAGF;;MAEA;MACA;IAEJ,CAAC,CAAC,OAAO7B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IACjC;EAGJ,CAAC;EAID,MAAM+B,gBAAgB,GAAG,MAAAA,CAAOpC,EAAU,EAAEqC,WAA8B,KAAK;IAC3E,IAAI;MACA,MAAMnC,QAAQ,GAAG,MAAMlB,KAAK,CAACsD,GAAG,CAAE,mCAAkCtC,EAAG,EAAC,EAAEqC,WAAW,CAAC;;MAEtF;MACAxC,QAAQ,CAAC0C,SAAS,IACdA,SAAS,CAACC,GAAG,CAACb,IAAI,IAAKA,IAAI,CAAC3B,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAG2B,IAAI;QAAE,GAAGU;MAAY,CAAC,GAAGV,IAAK,CAC/E,CAAC;MAED,OAAOzB,QAAQ;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ,CAAC;;EAGD,MAAMoC,gBAAgB,GAAG,MAAOzC,EAAU,IAAK;IAC3C,IAAI;MACA,MAAMhB,KAAK,CAAC0D,MAAM,CAAE,mCAAkC1C,EAAG,EAAC,CAAC;MAC3D,MAAM2C,YAAY,GAAG/C,KAAK,CAACgD,MAAM,CAACjB,IAAI,IAAIA,IAAI,CAAC3B,EAAE,KAAKA,EAAE,CAAC;MACzDH,QAAQ,CAAC8C,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOtC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMwC,YAA0B,GAAG;IAC/BjD,KAAK;IACL6C,gBAAgB;IAChB1C,eAAe;IACfqC,gBAAgB;IAChBlB,gBAAgB;IAChBT,gBAAgB;IAChBM,QAAQ;IACRC,UAAU;IACVC;EAGJ,CAAC;EAED,oBACI/B,OAAA,CAACC,iBAAiB,CAAC2D,QAAQ;IAACf,KAAK,EAAEc,YAAa;IAAAnD,QAAA,EAC3CA;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAErC,CAAC;AAACvD,GAAA,CAvIWF,kBAAqD;EAAA,QAE7CV,WAAW;AAAA;AAAAoE,EAAA,GAFnB1D,kBAAqD;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}