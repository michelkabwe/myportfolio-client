{"ast":null,"code":"var _jsxFileName = \"/Users/Michelka/Documents/portfolio/frontend/src/components/Post.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useCategoriesContext } from \"../contexts/usePostProvider/usePostList\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const {} = useCategoriesContext();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]); // Initialize as an empty array for multiple posts\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/api/posts/${id}`);\n        setPost([response.data]); // Wrap response.data in an array or handle if it's already an array\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    };\n    fetchPost();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'red'\n          },\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), item.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.imageUrl,\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_s(Post, \"N+L63I4LHerTZOghoiCCaRN8aBA=\", false, function () {\n  return [useCategoriesContext, useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","useCategoriesContext","axios","useParams","jsxDEV","_jsxDEV","Post","_s","id","post","setPost","fetchPost","response","get","data","error","console","children","length","map","item","style","color","title","fileName","_jsxFileName","lineNumber","columnNumber","content","imageUrl","src","alt","_c","$RefreshReg$"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/components/Post.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCategoriesContext } from \"../contexts/usePostProvider/usePostList\";\n\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\n\ninterface Post {\n    [x: string]: any;\n    title: string;\n    content: string;\n    imageUrl?: string; // 'imageUrl' is optional if not always present in your data\n    item: string;\n    // Other properties...\n  }\n\n\n  const Post = () => {\n    const { } = useCategoriesContext();\n    const { id } = useParams();\n    const [post, setPost] = useState<Post[]>([]); // Initialize as an empty array for multiple posts\n\n    useEffect(() => {\n      const fetchPost = async () => {\n        try {\n          const response = await axios.get(`http://localhost:3001/api/posts/${id}`);\n          setPost([response.data]); // Wrap response.data in an array or handle if it's already an array\n        } catch (error) {\n          console.error('Error fetching post:', error);\n        }\n      };\n\n      fetchPost();\n    }, [id]);\n\n    return (\n      <div>\n        {post.length > 0 ? (\n          <div>\n            {post.map((item: Post) => (\n              <div key={item.id}>\n                <h2 style={{ color: 'red' }}>{item.title}</h2>\n                <p>{item.content}</p>\n                {item.imageUrl && <img src={item.imageUrl} alt=\"Post\" />}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    );\n  };\n\n  export default Post;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,yCAAyC;AAE9E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAAE,CAAC,GAAGN,oBAAoB,CAAC,CAAC;EAClC,MAAM;IAAEO;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,mCAAkCL,EAAG,EAAC,CAAC;QACzEE,OAAO,CAAC,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAY,QAAA,EACGR,IAAI,CAACS,MAAM,GAAG,CAAC,gBACdb,OAAA;MAAAY,QAAA,EACGR,IAAI,CAACU,GAAG,CAAEC,IAAU,iBACnBf,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAIgB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAL,QAAA,EAAEG,IAAI,CAACG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9CtB,OAAA;UAAAY,QAAA,EAAIG,IAAI,CAACQ;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBP,IAAI,CAACS,QAAQ,iBAAIxB,OAAA;UAAKyB,GAAG,EAAEV,IAAI,CAACS,QAAS;UAACE,GAAG,EAAC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAHhDP,IAAI,CAACZ,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENtB,OAAA;MAAAY,QAAA,EAAG;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,IAAI;EAAA,QACIL,oBAAoB,EACjBE,SAAS;AAAA;AAAA6B,EAAA,GAFpB1B,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}