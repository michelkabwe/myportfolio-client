{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState,useRef}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const CategoriesContext=/*#__PURE__*/createContext(undefined);export const useCategoriesContext=()=>{const context=useContext(CategoriesContext);if(!context){throw new Error('useCategoriesContext must be used within a CategoriesProvider');}return context;};export const CategoriesProvider=_ref=>{let{children}=_ref;const[posts,setPosts]=useState([]);const handlePostClick=id=>{return\"http://localhost:3001/api/posts/\".concat(id);};const fetchPosts=async()=>{try{const response=await axios.get('http://localhost:3001/api/posts/');setPosts(response.data);}catch(error){console.error('Error fetching data:',error);}};useEffect(()=>{fetchPosts();},[]);const[selectedFile,setSelectedFile]=useState(null);const handleFileChange=event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file){setSelectedFile(file);}};const titleRef=useRef(null);const contentRef=useRef(null);const selectRef=useRef(null);const liveUrlRef=useRef(null);const sourceCodeRef=useRef(null);const handleSubmitPost=async event=>{event.preventDefault();try{var _titleRef$current,_contentRef$current,_selectRef$current,_liveUrlRef$current,_sourceCodeRef$curren;const formData=new FormData();if(selectedFile){formData.append('file',selectedFile);console.log(selectedFile,'selectedFILEEEE');;}const response=await axios.post('http://localhost:3001/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});const title=((_titleRef$current=titleRef.current)===null||_titleRef$current===void 0?void 0:_titleRef$current.value)||'';const content=((_contentRef$current=contentRef.current)===null||_contentRef$current===void 0?void 0:_contentRef$current.value)||'';const selectedCategory=((_selectRef$current=selectRef.current)===null||_selectRef$current===void 0?void 0:_selectRef$current.value)||'';const liveUrl=((_liveUrlRef$current=liveUrlRef.current)===null||_liveUrlRef$current===void 0?void 0:_liveUrlRef$current.value)||'';const sourceCode=((_sourceCodeRef$curren=sourceCodeRef.current)===null||_sourceCodeRef$curren===void 0?void 0:_sourceCodeRef$curren.value)||'';const imageUrl=response.data.imageUrl;formData.append('title',title);formData.append('content',content);formData.append('selectedCategory',selectedCategory);formData.append('imageUrl',imageUrl);formData.append('liveUrl',liveUrl);formData.append('sourceCode',sourceCode);const res=await axios.post('http://localhost:3001/api/posts/',{title,content,selectedCategory,imageUrl,liveUrl,sourceCode});}catch(error){console.error('Error',error);}};const handleUpdatePost=async(id,updatedData)=>{try{const response=await axios.put(\"http://localhost:3001/api/posts/\".concat(id),updatedData);setPosts(prevPosts=>prevPosts.map(post=>post.id===id?{...post,...updatedData}:post));return response;}catch(error){console.error('Error updating post:',error);throw error;}};const handleDeletePost=async id=>{try{await axios.delete(\"http://localhost:3001/api/posts/\".concat(id));const updatedPosts=posts.filter(post=>post.id!==id);setPosts(updatedPosts);}catch(error){console.error('Error deleting post:',error);}};const contextValue={posts,handleDeletePost,handlePostClick,handleUpdatePost,handleSubmitPost,handleFileChange,titleRef,contentRef,selectRef,liveUrlRef,sourceCodeRef};return/*#__PURE__*/_jsx(CategoriesContext.Provider,{value:contextValue,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","axios","jsx","_jsx","CategoriesContext","undefined","useCategoriesContext","context","Error","CategoriesProvider","_ref","children","posts","setPosts","handlePostClick","id","concat","fetchPosts","response","get","data","error","console","selectedFile","setSelectedFile","handleFileChange","event","_event$target$files","file","target","files","titleRef","contentRef","selectRef","liveUrlRef","sourceCodeRef","handleSubmitPost","preventDefault","_titleRef$current","_contentRef$current","_selectRef$current","_liveUrlRef$current","_sourceCodeRef$curren","formData","FormData","append","log","post","headers","title","current","value","content","selectedCategory","liveUrl","sourceCode","imageUrl","res","handleUpdatePost","updatedData","put","prevPosts","map","handleDeletePost","delete","updatedPosts","filter","contextValue","Provider"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/contexts/usePostProvider/usePostList.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode, useRef } from 'react';\nimport axios from 'axios';\n\n\ninterface CategoriesProviderProps {\n    children: ReactNode;\n}\n\ninterface Category {\n    id: number;\n    category_id: string;\n    content: string;\n    title: string;\n    imageUrl: string;\n    urlsRef:string;\n    liveUrl:string;\n    sourceCode:string;\n}\n\ninterface ContextValue {\n    posts: Category[];\n    handleDeletePost: (id: number) => void;\n    handlePostClick: (id: number) => void;\n    handleUpdatePost: (id: number, updatedData: Partial<Category>) => void;\n    handleSubmitPost: (event: React.FormEvent<HTMLFormElement>) => Promise<void>;\n    handleFileChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    titleRef: React.MutableRefObject<HTMLInputElement | null>;\n    contentRef: React.MutableRefObject<HTMLTextAreaElement | null>;\n    selectRef: React.MutableRefObject<HTMLSelectElement | null>;\n    liveUrlRef: React.MutableRefObject<HTMLInputElement | null>;\n    sourceCodeRef:React.MutableRefObject<HTMLInputElement | null>;\n}\n\n\n\nconst CategoriesContext = createContext<ContextValue | undefined>(undefined);\n\nexport const useCategoriesContext = (): ContextValue => {\n    const context = useContext(CategoriesContext);\n    if (!context) {\n        throw new Error('useCategoriesContext must be used within a CategoriesProvider');\n    }\n    return context;\n};\n\nexport const CategoriesProvider: React.FC<CategoriesProviderProps> = ({ children }) => {\n    const [posts, setPosts] = useState<Category[]>([]);\n\n    const handlePostClick = (id: number) => {\n        return `http://localhost:3001/api/posts/${id}`\n    };\n\n    const fetchPosts = async () => {\n        try {\n            const response = await axios.get<Category[]>('http://localhost:3001/api/posts/');\n            setPosts(response.data);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n\n\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n\n    const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            setSelectedFile(file);\n        }\n    };\n\n    const titleRef = useRef<HTMLInputElement>(null);\n    const contentRef = useRef<HTMLTextAreaElement>(null);\n    const selectRef = useRef<HTMLSelectElement>(null);\n    const liveUrlRef = useRef<HTMLInputElement>(null);\n    const sourceCodeRef = useRef<HTMLInputElement>(null);\n\n\n\n    const handleSubmitPost = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n\n        try {\n            const formData = new FormData();\n            if (selectedFile) {\n                formData.append('file', selectedFile);\n                console.log(selectedFile, 'selectedFILEEEE');\n                ;\n            }\n\n            const response: any = await axios.post('http://localhost:3001/api/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n\n            });\n\n            const title = titleRef.current?.value || '';\n            const content = contentRef.current?.value || '';\n            const selectedCategory = selectRef.current?.value || '';\n            const liveUrl = liveUrlRef.current?.value || '';\n            const sourceCode = sourceCodeRef.current?.value ||'';\n\n            const imageUrl = response.data.imageUrl;\n\n            formData.append('title', title);\n            formData.append('content', content);\n            formData.append('selectedCategory', selectedCategory);\n            formData.append('imageUrl', imageUrl);\n            formData.append('liveUrl', liveUrl);\n            formData.append('sourceCode', sourceCode);\n\n\n            const res = await axios.post<FormData>('http://localhost:3001/api/posts/', {\n                title, content, selectedCategory, imageUrl, liveUrl, sourceCode\n\n            })\n\n        } catch (error) {\n            console.error('Error', error)\n        }\n    }\n\n\n\n    const handleUpdatePost = async (id: number, updatedData: Partial<Category>) => {\n        try {\n            const response = await axios.put(`http://localhost:3001/api/posts/${id}`, updatedData);\n            setPosts(prevPosts =>\n                prevPosts.map(post => (post.id === id ? { ...post, ...updatedData } : post))\n            );\n\n            return response;\n        } catch (error) {\n            console.error('Error updating post:', error);\n            throw error;\n        }\n    };\n\n\n    const handleDeletePost = async (id: number) => {\n        try {\n            await axios.delete(`http://localhost:3001/api/posts/${id}`);\n            const updatedPosts = posts.filter(post => post.id !== id);\n            setPosts(updatedPosts);\n        } catch (error) {\n            console.error('Error deleting post:', error);\n        }\n    };\n\n    const contextValue: ContextValue = {\n        posts,\n        handleDeletePost,\n        handlePostClick,\n        handleUpdatePost,\n        handleSubmitPost,\n        handleFileChange,\n        titleRef,\n        contentRef,\n        selectRef,\n        liveUrlRef,\n        sourceCodeRef\n    };\n\n    return (\n        <CategoriesContext.Provider value={contextValue}>\n            {children}\n        </CategoriesContext.Provider>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}