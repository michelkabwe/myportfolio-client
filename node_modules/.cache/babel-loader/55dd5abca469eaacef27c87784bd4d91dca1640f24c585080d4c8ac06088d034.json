{"ast":null,"code":"var _jsxFileName = \"/Users/Michelka/Documents/portfolio/frontend/src/pages/Admin/PostPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport styles from '../../styles/PostPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const titleRef = useRef(null);\n  const contentRef = useRef(null);\n  const selectRef = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      console.error('No file selected.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      var _titleRef$current, _contentRef$current, _selectRef$current;\n      const response = await axios.post('http://localhost:3001/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const {\n        uploadedImg\n      } = response.data; // Assuming backend returns the uploaded file path\n\n      const title = ((_titleRef$current = titleRef.current) === null || _titleRef$current === void 0 ? void 0 : _titleRef$current.value) || '';\n      const content = ((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.value) || '';\n      const selectedCategory = ((_selectRef$current = selectRef.current) === null || _selectRef$current === void 0 ? void 0 : _selectRef$current.value) || '';\n      console.log(title, content, selectedCategory, uploadedImg);\n      await axios.post('http://localhost:3001/api/posts/', {\n        title,\n        content,\n        selectedCategory,\n        uploadedImg\n      });\n    } catch (error) {\n      console.error('Error', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Other logic if needed\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postpage_container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'black'\n      },\n      children: \"PostPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      style: {\n        padding: '5rem',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"msPhYfLPRyNgTTtqOBaMC5KiYII=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useState","useRef","Form","Button","axios","styles","jsxDEV","_jsxDEV","PostPage","_s","titleRef","contentRef","selectRef","selectedFile","setSelectedFile","handleFileChange","event","_event$target$files","file","target","files","handleUpload","console","error","formData","FormData","append","_titleRef$current","_contentRef$current","_selectRef$current","response","post","headers","uploadedImg","data","title","current","value","content","selectedCategory","log","handleSubmit","preventDefault","className","postpage_container","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","padding","height","Control","type","onChange","accept","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/pages/Admin/PostPage.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport styles from '../../styles/PostPage.module.css';\n\ninterface FormData {\n  title: string;\n  content: string;\n}\n\nconst PostPage: React.FC = () => {\n  const titleRef = useRef<HTMLInputElement>(null);\n  const contentRef = useRef<HTMLTextAreaElement>(null);\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      console.error('No file selected.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      const response: any = await axios.post('http://localhost:3001/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      const { uploadedImg } = response.data; // Assuming backend returns the uploaded file path\n\n      const title = titleRef.current?.value || '';\n      const content = contentRef.current?.value || '';\n      const selectedCategory = selectRef.current?.value || '';\n\n      console.log(title, content, selectedCategory, uploadedImg);\n\n      await axios.post<FormData>('http://localhost:3001/api/posts/', {\n        title,\n        content,\n        selectedCategory,\n        uploadedImg,\n      });\n    } catch (error) {\n      console.error('Error', error);\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // Other logic if needed\n  };\n\n  return (\n    <div className={styles.postpage_container}>\n      <h1 style={{ color: 'black' }}>PostPage</h1>\n      <Form onSubmit={handleSubmit} style={{ padding: '5rem', height: '100%' }}>\n        {/* Form fields */}\n        {/* ... */}\n        <Form.Control\n          type=\"file\"\n          onChange={handleFileChange}\n          accept=\"image/*\"\n        />\n        <Button variant=\"primary\" onClick={handleUpload}>\n          Upload\n        </Button>\n        {/* ... */}\n      </Form>\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}