{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends = require(\"@swc/helpers/lib/_extends.js\").default;\nvar _interop_require_default = require(\"@swc/helpers/lib/_interop_require_default.js\").default;\nvar _interop_require_wildcard = require(\"@swc/helpers/lib/_interop_require_wildcard.js\").default;\nvar _object_without_properties_loose = require(\"@swc/helpers/lib/_object_without_properties_loose.js\").default;\nvar _react = _interop_require_wildcard(require(\"react\"));\nvar _head = _interop_require_default(require(\"../shared/lib/head\"));\nvar _imageBlurSvg = require(\"../shared/lib/image-blur-svg\");\nvar _imageConfig = require(\"../shared/lib/image-config\");\nvar _imageConfigContext = require(\"../shared/lib/image-config-context\");\nvar _warnOnce = require(\"../shared/lib/utils/warn-once\");\nvar _imageLoader = _interop_require_default(require(\"next/dist/shared/lib/image-loader\"));\nconst configEnv = process.env.__NEXT_IMAGE_OPTS;\nconst allImgs = new Map();\nlet perfObserver;\nif (typeof window === 'undefined') {\n  globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = ['lazy', 'eager', undefined];\nfunction isStaticRequire(src) {\n  return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n  return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n  return typeof src === 'object' && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths({\n  deviceSizes,\n  allSizes\n}, width, sizes) {\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n    const percentSizes = [];\n    for (let match; match = viewportWidthRe.exec(sizes); match) {\n      percentSizes.push(parseInt(match[2]));\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01;\n      return {\n        widths: allSizes.filter(s => s >= deviceSizes[0] * smallestRatio),\n        kind: 'w'\n      };\n    }\n    return {\n      widths: allSizes,\n      kind: 'w'\n    };\n  }\n  if (typeof width !== 'number') {\n    return {\n      widths: deviceSizes,\n      kind: 'w'\n    };\n  }\n  const widths = [...new Set(\n  // > This means that most OLED screens that say they are 3x resolution,\n  // > are actually 3x in the green color, but only 1.5x in the red and\n  // > blue colors. Showing a 3x resolution image in the app vs a 2x\n  // > resolution image will be visually the same, though the 3x image\n  // > takes significantly more data. Even true 3x resolution screens are\n  // > wasteful as the human eye cannot see that level of detail without\n  // > something like a magnifying glass.\n  // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n  [width, width * 2 /*, width * 3*/].map(w => allSizes.find(p => p >= w) || allSizes[allSizes.length - 1]))];\n  return {\n    widths,\n    kind: 'x'\n  };\n}\nfunction generateImgAttrs({\n  config,\n  src,\n  unoptimized,\n  width,\n  quality,\n  sizes,\n  loader\n}) {\n  if (unoptimized) {\n    return {\n      src,\n      srcSet: undefined,\n      sizes: undefined\n    };\n  }\n  const {\n    widths,\n    kind\n  } = getWidths(config, width, sizes);\n  const last = widths.length - 1;\n  return {\n    sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n    srcSet: widths.map((w, i) => `${loader({\n      config,\n      src,\n      quality,\n      width: w\n    })} ${kind === 'w' ? w : i + 1}${kind}`).join(', '),\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({\n      config,\n      src,\n      quality,\n      width: widths[last]\n    })\n  };\n}\nfunction getInt(x) {\n  if (typeof x === 'number' || typeof x === 'undefined') {\n    return x;\n  }\n  if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10);\n  }\n  return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n  if (!img || img['data-loaded-src'] === src) {\n    return;\n  }\n  img['data-loaded-src'] = src;\n  const p = 'decode' in img ? img.decode() : Promise.resolve();\n  p.catch(() => {}).then(() => {\n    if (!img.parentNode) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return;\n    }\n    if (placeholder === 'blur') {\n      setBlurComplete(true);\n    }\n    if (onLoadRef == null ? void 0 : onLoadRef.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load');\n      Object.defineProperty(event, 'target', {\n        writable: false,\n        value: img\n      });\n      let prevented = false;\n      let stopped = false;\n      onLoadRef.current(_extends({}, event, {\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true;\n          event.preventDefault();\n        },\n        stopPropagation: () => {\n          stopped = true;\n          event.stopPropagation();\n        }\n      }));\n    }\n    if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n      onLoadingCompleteRef.current(img);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!img.getAttribute('sizes') || img.getAttribute('sizes') === '100vw')) {\n          let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n          if (widthViewportRatio < 0.6) {\n            (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`);\n          }\n        }\n        if (img.parentElement) {\n          const {\n            position\n          } = window.getComputedStyle(img.parentElement);\n          const valid = ['absolute', 'fixed', 'relative'];\n          if (!valid.includes(position)) {\n            (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(',')}.`);\n          }\n        }\n        if (img.height === 0) {\n          (0, _warnOnce).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n        }\n      }\n      const heightModified = img.height.toString() !== img.getAttribute('height');\n      const widthModified = img.width.toString() !== img.getAttribute('width');\n      if (heightModified && !widthModified || !heightModified && widthModified) {\n        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n      }\n    }\n  });\n}\nconst ImageElement = /*#__PURE__*/(0, _react).forwardRef((_param, forwardedRef) => {\n  var {\n      imgAttributes,\n      heightInt,\n      widthInt,\n      qualityInt,\n      className,\n      imgStyle,\n      blurStyle,\n      isLazy,\n      fill,\n      placeholder,\n      loading,\n      srcString,\n      config,\n      unoptimized,\n      loader,\n      onLoadRef,\n      onLoadingCompleteRef,\n      setBlurComplete,\n      setShowAltText,\n      onLoad,\n      onError\n    } = _param,\n    rest = _object_without_properties_loose(_param, [\"imgAttributes\", \"heightInt\", \"widthInt\", \"qualityInt\", \"className\", \"imgStyle\", \"blurStyle\", \"isLazy\", \"fill\", \"placeholder\", \"loading\", \"srcString\", \"config\", \"unoptimized\", \"loader\", \"onLoadRef\", \"onLoadingCompleteRef\", \"setBlurComplete\", \"setShowAltText\", \"onLoad\", \"onError\"]);\n  loading = isLazy ? 'lazy' : loading;\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n    width: widthInt,\n    height: heightInt,\n    decoding: \"async\",\n    \"data-nimg\": fill ? 'fill' : '1',\n    className: className,\n    // @ts-ignore - TODO: upgrade to `@types/react@17`\n    loading: loading,\n    style: _extends({}, imgStyle, blurStyle),\n    ref: (0, _react).useCallback(img => {\n      if (forwardedRef) {\n        if (typeof forwardedRef === 'function') forwardedRef(img);else if (typeof forwardedRef === 'object') {\n          // @ts-ignore - .current is read only it's usually assigned by react internally\n          forwardedRef.current = img;\n        }\n      }\n      if (!img) {\n        return;\n      }\n      if (onError) {\n        // If the image has an error before react hydrates, then the error is lost.\n        // The workaround is to wait until the image is mounted which is after hydration,\n        // then we set the src again to trigger the error handler (if there was an error).\n        // eslint-disable-next-line no-self-assign\n        img.src = img.src;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!srcString) {\n          console.error(`Image is missing required \"src\" property:`, img);\n        }\n        if (img.getAttribute('alt') === null) {\n          console.error(`Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`);\n        }\n      }\n      if (img.complete) {\n        handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n      }\n    }, [srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, onError, unoptimized, forwardedRef]),\n    onLoad: event => {\n      const img = event.currentTarget;\n      handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n    },\n    onError: event => {\n      // if the real image fails to load, this will ensure \"alt\" is visible\n      setShowAltText(true);\n      if (placeholder === 'blur') {\n        // If the real image fails to load, this will still remove the placeholder.\n        setBlurComplete(true);\n      }\n      if (onError) {\n        onError(event);\n      }\n    }\n  })));\n});\nconst Image = /*#__PURE__*/(0, _react).forwardRef((_param, forwardedRef) => {\n  var {\n      src,\n      sizes,\n      unoptimized = false,\n      priority = false,\n      loading,\n      className,\n      quality,\n      width,\n      height,\n      fill,\n      style,\n      onLoad,\n      onLoadingComplete,\n      placeholder = 'empty',\n      blurDataURL,\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot\n    } = _param,\n    all = _object_without_properties_loose(_param, [\"src\", \"sizes\", \"unoptimized\", \"priority\", \"loading\", \"className\", \"quality\", \"width\", \"height\", \"fill\", \"style\", \"onLoad\", \"onLoadingComplete\", \"placeholder\", \"blurDataURL\", \"layout\", \"objectFit\", \"objectPosition\", \"lazyBoundary\", \"lazyRoot\"]);\n  const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n  const config = (0, _react).useMemo(() => {\n    const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b);\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b);\n    return _extends({}, c, {\n      allSizes,\n      deviceSizes\n    });\n  }, [configContext]);\n  let rest = all;\n  let loader = rest.loader || _imageLoader.default;\n  // Remove property so it's not spread on <img> element\n  delete rest.loader;\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = ('__next_img_default' in loader);\n  if (isDefaultLoader) {\n    if (config.loader === 'custom') {\n      throw new Error(`Image with src \"${src}\" is missing \"loader\" prop.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`);\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader;\n    var _tmp;\n    _tmp = obj => {\n      const {\n          config: _\n        } = obj,\n        opts = _object_without_properties_loose(obj, [\"config\"]);\n      return customImageLoader(opts);\n    }, loader = _tmp, _tmp;\n  }\n  if (layout) {\n    if (layout === 'fill') {\n      fill = true;\n    }\n    const layoutToStyle = {\n      intrinsic: {\n        maxWidth: '100%',\n        height: 'auto'\n      },\n      responsive: {\n        width: '100%',\n        height: 'auto'\n      }\n    };\n    const layoutToSizes = {\n      responsive: '100vw',\n      fill: '100vw'\n    };\n    const layoutStyle = layoutToStyle[layout];\n    if (layoutStyle) {\n      style = _extends({}, style, layoutStyle);\n    }\n    const layoutSizes = layoutToSizes[layout];\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes;\n    }\n  }\n  let staticSrc = '';\n  let widthInt = getInt(width);\n  let heightInt = getInt(height);\n  let blurWidth;\n  let blurHeight;\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src;\n    if (!staticImageData.src) {\n      throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n    }\n    blurWidth = staticImageData.blurWidth;\n    blurHeight = staticImageData.blurHeight;\n    blurDataURL = blurDataURL || staticImageData.blurDataURL;\n    staticSrc = staticImageData.src;\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width;\n        heightInt = staticImageData.height;\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width;\n        heightInt = Math.round(staticImageData.height * ratio);\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height;\n        widthInt = Math.round(staticImageData.width * ratio);\n      }\n    }\n  }\n  src = typeof src === 'string' ? src : staticSrc;\n  let isLazy = !priority && (loading === 'lazy' || typeof loading === 'undefined');\n  if (src.startsWith('data:') || src.startsWith('blob:')) {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true;\n    isLazy = false;\n  }\n  if (config.unoptimized) {\n    unoptimized = true;\n  }\n  if (isDefaultLoader && src.endsWith('.svg') && !config.dangerouslyAllowSVG) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true;\n  }\n  const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n  const [showAltText, setShowAltText] = (0, _react).useState(false);\n  const qualityInt = getInt(quality);\n  if (process.env.NODE_ENV !== 'production') {\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true;\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n        }\n        if (height) {\n          throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n        }\n        if ((style == null ? void 0 : style.position) && style.position !== 'absolute') {\n          throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n        }\n        if ((style == null ? void 0 : style.width) && style.width !== '100%') {\n          throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n        }\n        if ((style == null ? void 0 : style.height) && style.height !== '100%') {\n          throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n        }\n      } else {\n        if (typeof widthInt === 'undefined') {\n          throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n        } else if (isNaN(widthInt)) {\n          throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n        }\n        if (typeof heightInt === 'undefined') {\n          throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n        } else if (isNaN(heightInt)) {\n          throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(',')}.`);\n    }\n    if (priority && loading === 'lazy') {\n      throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n    }\n    if (placeholder === 'blur') {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        (0, _warnOnce).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n      }\n      if (!blurDataURL) {\n        const VALID_BLUR_EXT = ['jpeg', 'png', 'webp', 'avif'] // should match next-image-loader\n        ;\n\n        throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(',')}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n      }\n    }\n    if ('ref' in rest) {\n      (0, _warnOnce).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n    }\n    if (!unoptimized && loader !== _imageLoader.default) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75\n      });\n      let url;\n      try {\n        url = new URL(urlStr);\n      } catch (err) {}\n      if (urlStr === src || url && url.pathname === src && !url.search) {\n        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n      }\n    }\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot\n    })) {\n      if (legacyValue) {\n        (0, _warnOnce).warnOnce(`Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` + `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`);\n      }\n    }\n    if (typeof window !== 'undefined' && !perfObserver && window.PerformanceObserver) {\n      perfObserver = new PerformanceObserver(entryList => {\n        for (const entry of entryList.getEntries()) {\n          var ref;\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = (entry == null ? void 0 : (ref = entry.element) == null ? void 0 : ref.src) || '';\n          const lcpImage = allImgs.get(imgSrc);\n          if (lcpImage && !lcpImage.priority && lcpImage.placeholder !== 'blur' && !lcpImage.src.startsWith('data:') && !lcpImage.src.startsWith('blob:')) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            (0, _warnOnce).warnOnce(`Image with src \"${lcpImage.src}\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.` + `\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority`);\n          }\n        }\n      });\n      try {\n        perfObserver.observe({\n          type: 'largest-contentful-paint',\n          buffered: true\n        });\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err);\n      }\n    }\n  }\n  const imgStyle = Object.assign(fill ? {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    objectFit,\n    objectPosition\n  } : {}, showAltText ? {} : {\n    color: 'transparent'\n  }, style);\n  const blurStyle = placeholder === 'blur' && blurDataURL && !blurComplete ? {\n    backgroundSize: imgStyle.objectFit || 'cover',\n    backgroundPosition: imgStyle.objectPosition || '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundImage: `url(\"data:image/svg+xml;charset=utf-8,${(0, _imageBlurSvg).getImageBlurSvg({\n      widthInt,\n      heightInt,\n      blurWidth,\n      blurHeight,\n      blurDataURL\n    })}\")`\n  } : {};\n  if (process.env.NODE_ENV === 'development') {\n    if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith('/'))) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      blurStyle.backgroundImage = `url(\"${blurDataURL}\")`;\n    }\n  }\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader\n  });\n  let srcString = src;\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      let fullUrl;\n      try {\n        fullUrl = new URL(imgAttributes.src);\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href);\n      }\n      allImgs.set(fullUrl.href, {\n        src,\n        priority,\n        placeholder\n      });\n    }\n  }\n  const linkProps = {\n    // @ts-expect-error upgrade react types to react 18\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: rest.crossOrigin\n  };\n  const onLoadRef = (0, _react).useRef(onLoad);\n  (0, _react).useEffect(() => {\n    onLoadRef.current = onLoad;\n  }, [onLoad]);\n  const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n  (0, _react).useEffect(() => {\n    onLoadingCompleteRef.current = onLoadingComplete;\n  }, [onLoadingComplete]);\n  const imgElementArgs = _extends({\n    isLazy,\n    imgAttributes,\n    heightInt,\n    widthInt,\n    qualityInt,\n    className,\n    imgStyle,\n    blurStyle,\n    loading,\n    config,\n    fill,\n    unoptimized,\n    placeholder,\n    loader,\n    srcString,\n    onLoadRef,\n    onLoadingCompleteRef,\n    setBlurComplete,\n    setShowAltText\n  }, rest);\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(ImageElement, Object.assign({}, imgElementArgs, {\n    ref: forwardedRef\n  })), priority ?\n  // Note how we omit the `href` attribute, as it would only be relevant\n  // for browsers that do not support `imagesrcset`, and in those cases\n  // it would likely cause the incorrect image to be preloaded.\n  //\n  // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n  /*#__PURE__*/\n  _react.default.createElement(_head.default, null, /*#__PURE__*/_react.default.createElement(\"link\", Object.assign({\n    key: '__nimg-' + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n    rel: \"preload\",\n    as: \"image\",\n    href: imgAttributes.srcSet ? undefined : imgAttributes.src\n  }, linkProps))) : null);\n});\nvar _default = Image;\nexports.default = _default;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["_object_without_properties_loose","require","default","_react","_interop_require_wildcard","_head","_interop_require_default","_imageBlurSvg","_imageConfig","_imageConfigContext","_warnOnce","_imageLoader","configEnv","process","env","__NEXT_IMAGE_OPTS","allImgs","Map","perfObserver","window","globalThis","__NEXT_IMAGE_IMPORTED","VALID_LOADING_VALUES","undefined","isStaticRequire","src","isStaticImageData","isStaticImport","getWidths","sizes","deviceSizes","allSizes","width","viewportWidthRe","percentSizes","match","exec","push","parseInt","length","smallestRatio","Math","min","widths","filter","s","kind","Set","map","w","find","p","generateImgAttrs","unoptimized","config","quality","loader","srcSet","last","i","join","getInt","x","test","NaN","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","decode","Promise","resolve","then","parentNode","current","event","Event","defineProperty","writable","value","prevented","stopped","_extends","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","NODE_ENV","getAttribute","widthViewportRatio","getBoundingClientRect","innerWidth","warnOnce","parentElement","position","getComputedStyle","valid","includes","String","height","heightModified","toString","widthModified","forwardRef","_param","forwardedRef","imgAttributes","heightInt","widthInt","qualityInt","className","imgStyle","blurStyle","isLazy","fill","loading","srcString","setShowAltText","onLoad","onError","rest","createElement","Fragment","Object","assign","decoding","style","useCallback","console","error","complete","priority","onLoadingComplete","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot","all","configContext","useContext","ImageConfigContext","useMemo","c","imageConfigDefault","imageSizes","sort","a","b","isDefaultLoader","Error","customImageLoader","_tmp","obj","_","opts","layoutToStyle","maxWidth","layoutToSizes","responsive","layoutStyle","layoutSizes","staticSrc","blurWidth","blurHeight","staticImageData","JSON","stringify","ratio","round","startsWith","endsWith","dangerouslyAllowSVG","blurComplete","useState","showAltText","isNaN","VALID_BLUR_EXT","urlStr","url","URL","err","pathname","search","legacyKey","legacyValue","entries","PerformanceObserver","entryList","entry","getEntries","ref","imgSrc","element","lcpImage","get","observe","type","buffered","left","top","right","bottom","color","backgroundSize","backgroundPosition","backgroundRepeat","getImageBlurSvg","backgroundImage","fullUrl","e","location","href","set","linkProps","imageSrcSet","crossOrigin","useRef","useEffect","imgElementArgs","ImageElement","key","rel","as"],"sources":["../../../src/client/image.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}