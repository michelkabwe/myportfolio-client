{"ast":null,"code":"var _jsxFileName = \"/Users/Michelka/Documents/portfolio/frontend/src/components/Post.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useCategoriesContext } from \"../contexts/usePostProvider/usePostList\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const {} = useCategoriesContext();\n  const {\n    postId\n  } = useParams(); // Accessing the postId from the URL params\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        // Fetching the single post based on postId\n        const response = await axios.get(`http://localhost:3001/api/posts/${postId}`);\n        setPost(response.data); // Setting the retrieved post data to state\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    };\n    fetchPost(); // Fetch the post when the component mounts\n  }, [postId]); // Re-fetch post whenever postId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), post.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.imageUrl,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"yZ/0RM8Kqypa5Bj5VuKDxZS4Kn8=\", false, function () {\n  return [useCategoriesContext, useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","useCategoriesContext","axios","useParams","jsxDEV","_jsxDEV","Post","_s","postId","post","setPost","fetchPost","response","get","data","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","imageUrl","src","alt","_c","$RefreshReg$"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/components/Post.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCategoriesContext } from \"../contexts/usePostProvider/usePostList\";\n\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\n\ninterface Post {\n    title: string;\n    content: string;\n    imageUrl?: string; // 'imageUrl' is optional if not always present in your data\n    // Other properties...\n  }\n\n\nconst Post = () => {\n\n    const {  } = useCategoriesContext();\n\n\n\n  const { postId } = useParams(); // Accessing the postId from the URL params\n  const [post, setPost] = useState<Post | null>(null);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        // Fetching the single post based on postId\n        const response = await axios.get(`http://localhost:3001/api/posts/${postId}`);\n        setPost(response.data); // Setting the retrieved post data to state\n      } catch (error) {\n        console.error('Error fetching post:', error);\n      }\n    };\n\n    fetchPost(); // Fetch the post when the component mounts\n  }, [postId]); // Re-fetch post whenever postId changes\n\n  return (\n    <div>\n      {post ? (\n        <div>\n          <h2>{post.title}</h2>\n          <p>{post.content}</p>\n          {post.imageUrl && <img src={post.imageUrl} alt=\"Post\" />} {/* Render image if available */}\n          {/* Render other post details */}\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,yCAAyC;AAE9E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAAG,CAAC,GAAGN,oBAAoB,CAAC,CAAC;EAIrC,MAAM;IAAEO;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,mCAAkCL,MAAO,EAAC,CAAC;QAC7EE,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACEH,OAAA;IAAAY,QAAA,EACGR,IAAI,gBACHJ,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKR,IAAI,CAACS;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAAY,QAAA,EAAIR,IAAI,CAACc;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBb,IAAI,CAACe,QAAQ,iBAAInB,OAAA;QAAKoB,GAAG,EAAEhB,IAAI,CAACe,QAAS;QAACE,GAAG,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvD,CAAC,gBAENjB,OAAA;MAAAY,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CArCID,IAAI;EAAA,QAEOL,oBAAoB,EAIhBE,SAAS;AAAA;AAAAwB,EAAA,GANxBrB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}