{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction defaultLoader({\n  config,\n  src,\n  width,\n  quality\n}) {\n  if (process.env.NODE_ENV !== 'production') {\n    const missingValues = [];\n    // these should always be provided but make sure they are\n    if (!src) missingValues.push('src');\n    if (!width) missingValues.push('width');\n    if (missingValues.length > 0) {\n      throw new Error(`Next Image Optimization requires ${missingValues.join(', ')} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify({\n        src,\n        width,\n        quality\n      })}`);\n    }\n    if (src.startsWith('//')) {\n      throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`);\n    }\n    if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n      let parsedSrc;\n      try {\n        parsedSrc = new URL(src);\n      } catch (err) {\n        console.error(err);\n        throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`);\n      }\n      if (process.env.NODE_ENV !== 'test') {\n        // We use dynamic require because this should only error in development\n        const {\n          hasMatch\n        } = require('./match-remote-pattern');\n        if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n          throw new Error(`Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` + `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`);\n        }\n      }\n    }\n  }\n  return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${quality || 75}`;\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nvar _default = defaultLoader;\nexports.default = _default;","map":{"version":3,"names":["defaultLoader","config","src","width","quality","process","env","NODE_ENV","missingValues","push","length","Error","join","JSON","stringify","startsWith","domains","remotePatterns","parsedSrc","URL","err","console","error","hasMatch","require","hostname","path","encodeURIComponent","__next_img_default"],"sources":["../../../../src/shared/lib/image-loader.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;AAEA,SAASA,aAAaA,CAAC;EACrBC,MAAM;EACNC,GAAG;EACHC,KAAK;EACLC;AAAO,CACoB,EAAU;EACrC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAMC,aAAa,GAAG,EAAE;IAExB;IACA,IAAI,CAACN,GAAG,EAAEM,aAAa,CAACC,IAAI,CAAC,KAAK,CAAC;IACnC,IAAI,CAACN,KAAK,EAAEK,aAAa,CAACC,IAAI,CAAC,OAAO,CAAC;IAEvC,IAAID,aAAa,CAACE,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAM,IAAIC,KAAK,CACZ,oCAAmCH,aAAa,CAACI,IAAI,CACpD,IAAI,CACJ,gGAA+FC,IAAI,CAACC,SAAS,CAC7G;QAAEZ,GAAG;QAAEC,KAAK;QAAEC;OAAS,CACvB,EAAC,CACJ;;IAGH,IAAIF,GAAG,CAACa,UAAU,CAAC,IAAI,CAAC,EAAE;MACxB,MAAM,IAAIJ,KAAK,CACZ,wBAAuBT,GAAI,0GAAyG,CACtI;;IAGH,IAAI,CAACA,GAAG,CAACa,UAAU,CAAC,GAAG,CAAC,KAAKd,MAAM,CAACe,OAAO,IAAIf,MAAM,CAACgB,cAAc,CAAC,EAAE;MACrE,IAAIC,SAAS;MACb,IAAI;QACFA,SAAS,GAAG,IAAIC,GAAG,CAACjB,GAAG,CAAC;OACzB,CAAC,OAAOkB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClB,MAAM,IAAIT,KAAK,CACZ,wBAAuBT,GAAI,iIAAgI,CAC7J;;MAGH,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;QACnC;QACA,MAAM;UAAEgB;QAAQ,CAAE,GAAGC,OAAO,CAAC,wBAAwB,CAAC;QACtD,IAAI,CAACD,QAAQ,CAACtB,MAAM,CAACe,OAAO,EAAEf,MAAM,CAACgB,cAAc,EAAEC,SAAS,CAAC,EAAE;UAC/D,MAAM,IAAIP,KAAK,CACZ,qBAAoBT,GAAI,kCAAiCgB,SAAS,CAACO,QAAS,+DAA8D,GACxI,8EAA6E,CACjF;;;;;EAMT,OAAQ,GAAExB,MAAM,CAACyB,IAAK,QAAOC,kBAAkB,CAACzB,GAAG,CAAE,MAAKC,KAAM,MAC9DC,OAAO,IAAI,EACZ,EAAC;;AAGJ;AACA;AACAJ,aAAa,CAAC4B,kBAAkB,GAAG,IAAI;eAExB5B,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}