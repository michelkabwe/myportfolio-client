{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";//type UseContext = CategoriesProviderProps & Category\nconst CategoriesContext=/*#__PURE__*/createContext([]);export const useCategoriesContext=()=>{return useContext(CategoriesContext);};export const CategoriesProvider=_ref=>{let{children}=_ref;const[posts,setPosts]=useState([]);useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get('http://localhost:3001/api/posts/');setPosts(response.data);console.log(posts,'HOOK');}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);return/*#__PURE__*/_jsx(CategoriesContext.Provider,{value:posts,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsx","_jsx","CategoriesContext","useCategoriesContext","CategoriesProvider","_ref","children","posts","setPosts","fetchData","response","get","data","console","log","error","Provider","value"],"sources":["/Users/Michelka/Documents/portfolio/frontend/src/hooks/usePostListContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface CategoriesProviderProps {\n    children: ReactNode;\n}\n\ninterface Category {\n    category_id: string;\n    content: string;\n    title: string;\n    post_img: string;\n\n}\n\n//type UseContext = CategoriesProviderProps & Category\n\nconst CategoriesContext = createContext<Category[]>([]);\n\nexport const useCategoriesContext = () => {\n    return useContext(CategoriesContext);\n};\n\nexport const CategoriesProvider: React.FC<CategoriesProviderProps> = ({ children }) => {\n    const [posts, setPosts] = useState<Category[]>([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get<Category[]>('http://localhost:3001/api/posts/');\n                setPosts(response.data);\n                console.log(posts,'HOOK')\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n\n    return (\n        <CategoriesContext.Provider value={posts}>\n            {children}\n        </CategoriesContext.Provider>\n    );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAmB,OAAO,CACxF,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAc1B;AAEA,KAAM,CAAAC,iBAAiB,cAAGP,aAAa,CAAa,EAAE,CAAC,CAEvD,MAAO,MAAM,CAAAQ,oBAAoB,CAAGA,CAAA,GAAM,CACtC,MAAO,CAAAP,UAAU,CAACM,iBAAiB,CAAC,CACxC,CAAC,CAED,MAAO,MAAM,CAAAE,kBAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9E,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAa,EAAE,CAAC,CAElDD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAY,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAa,kCAAkC,CAAC,CAChFH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CACvBC,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC,MAAM,CAAC,CAC7B,CAAE,MAAOQ,KAAK,CAAE,CACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAEDN,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAGN,mBACIR,IAAA,CAACC,iBAAiB,CAACc,QAAQ,EAACC,KAAK,CAAEV,KAAM,CAAAD,QAAA,CACpCA,QAAQ,CACe,CAAC,CAErC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}